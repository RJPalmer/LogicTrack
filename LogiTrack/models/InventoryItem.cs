using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace LogiTrack.Models;

public class InventoryItem
{
    /// <summary>
    /// Represents an item in the inventory.
    /// </summary>
    [Key]
    [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
    public int ItemId { get; set; }

    /// <summary>
    /// Represents the name of the inventory item.
    /// </summary>
    public string Name { get; set; }

    /// <summary>
    /// Represents the quantity of the inventory item.
    /// </summary>
    public int Quantity { get; set; }

    /// <summary>
    /// Represents the price of the inventory item.
    /// </summary>
    public double Price { get; set; }

    /// <summary>
    /// Represents the location of the inventory item.
    /// </summary>
    public string Location { get; set; }

/// <summary>
/// Navigation property to the associated order.
/// </summary>
    public List<OrderProducts> OrderPr { get; set; }

    ///<summary
    /// Empty Constructor to initialize an inventory item.
    /// </summary>
    public InventoryItem()
    {
        Name = string.Empty;
        Location = string.Empty;
        OrderPr = new List<OrderProducts>();
        Price = 0.0;
    }

    /// <summary>
    /// Constructor to initialize an inventory item.
    /// <paramref name="v"/> is the name of the item.
    /// </summary>
    public InventoryItem(string v)
    {
        Name = v;
        Location = string.Empty;
        OrderPr = new List<OrderProducts>();
        Price = 0.0;
    }

    // Constructor used when creating a new item (ID will be generated by DB)
    public InventoryItem(string name, int quantity, string location, double price)
    {
        Name = name;
        Quantity = quantity;
        Location = location;
        OrderPr = new List<OrderProducts>();
        Price = price;
    }

    // Backward-compatible constructor when an explicit ItemId is needed
    public InventoryItem(int itemId, string name, int quantity, string location, double price)
        : this(name, quantity, location, price)
    {
        ItemId = itemId;
    }

    /// <summary>
    /// Returns a string representation of the inventory item.
    /// </summary>
    /// <returns>String representation of the inventory item.</returns>
    /// <remarks></remarks>
    public override string ToString()
    {
        return $"ItemId: {ItemId}, Name: {Name}, Quantity: {Quantity}, Location: {Location}, Price: {Price}";
    }

    /// <summary>
    /// Updates the quantity of the inventory item.
    /// </summary>
    /// <param name="newQuantity"></param>
    /// <returns></returns>
    public void UpdateQuantity(int newQuantity)
    {
        Quantity = newQuantity;
    }

    /// <summary>
    /// Updates the location of the inventory item.
    /// </summary>
    /// <param name="newLocation"></param>
    public void UpdateLocation(string newLocation)
    {
        Location = newLocation;
    }

    /// <summary>
    /// Updates the price of the inventory item.
    /// </summary>
    /// <param name="newPrice"></param>
    public void UpdatePrice(double newPrice)
    {
        Price = newPrice;
    }

    /// <summary>
    /// Displays the inventory item information to the console.
    /// </summary>
    public void DisplayInfo()
    {
        Console.WriteLine($"Item: {Name} | Quantity: {Quantity} | Location: {Location} | Price: {Price}");
    }
}
